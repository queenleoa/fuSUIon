/// <reference types="node" resolution-mode="require"/>
import type { SignalConstants } from 'node:os';
import { type ResultPromise, execa as exec } from 'execa';
import type { InstanceStartOptions_internal } from '../instance.js';
export type Process_internal = ResultPromise<{
    cleanup: true;
    reject: false;
}>;
export type ExecaStartOptions = InstanceStartOptions_internal & {
    resolver(options: {
        process: Process_internal;
        reject(data: string): Promise<void>;
        resolve(): void;
    }): void;
};
export type ExecaParameters = {
    name: string;
};
export type ExecaProcess = {
    _internal: {
        process: Process_internal;
    };
    name: string;
    start(command: (x: typeof exec) => void, options: ExecaStartOptions): Promise<void>;
    stop(signal?: keyof SignalConstants | number): Promise<void>;
};
export type ExecaReturnType = ExecaProcess;
export declare function execa(parameters: ExecaParameters): ExecaReturnType;
//# sourceMappingURL=execa.d.ts.map